Introduction
============

GlobalManager is a class utility for registering globals utilities, adapters and
relations between object.


Form, controller, factory
=========================

The basic task for showing and managing a form consist in three registrations: a
Qt form, a JPA controller, and a object factory.


The Qt form
===========

The form is designed with Qt Designer, and consists in a xml file with ui
extension.
With the code below we creates and registers a form for the entity object "Book":

Form booksForm = new Form("classpath:org/pypapi/demo/forms/books.ui",
                Book.class, "Demo application - Library");

GlobalManager.registerUtility(booksForm, IForm.class,
                "org.pypapi.demo.entities.Book");

Notice that the booksForm utility is registred with the name of the object Book.


The JPA controller
==================

The controller can easly be generated by the Netbeans IDE wizard, in two steps:

1. create the new entity Class (from database)
2. create the new JPA controller Classes from entity Classes

Refer to Netbeans IDE and JPA2 documentation.

The code below creates and registers the controller:

BookJpaController jpaCtrl= new BookJpaController(db.getEntityManagerFactory());
Controller bookController = new Controller(jpaCtrl, "Book");
GlobalManager.registerUtility(bookController, IController.class,
                "org.pypapi.demo.entities.Book");

The PyPaPi Controller object is an adapter for the Netbeans JPA Controller.


The factory
===========

The factory for the object managed by the form could be, in the easist way, the
class itself.

GlobalManager.registerUtility(Book.class, IFactory.class, "Book");

The code above registers the Book class as factory.


Registration from the form
==========================

The form object accomplish other globals registration in the framework.
Inspects the widgets thru its dynamic properties (see dynamicproperties.README),
and registers these objects:

1. a data context on the form, for every path dynamic property "entity"
2. to be continued...

